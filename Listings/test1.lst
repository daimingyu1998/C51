C51 COMPILER V9.57.0.0   TEST1                                                             09/29/2020 12:48:49 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TEST1
OBJECT MODULE PLACED IN .\Objects\test1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE test1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\tes
                    -t1.lst) TABS(2) OBJECT(.\Objects\test1.obj)

line level    source

   1          #include  <reg52.h>
   2          #include  <intrins.h>
   3          
   4          sbit motor_in1 = P2^0;
   5          sbit motor_in2 = P2^1;
   6          sbit display_data = P2^2;
   7          sbit display_clk = P2^3;
   8          sbit state_button = P3^3;
   9          sbit speed_button = P3^2;
  10          sbit timer_button = P3^7;
  11          int temp_set = 26;
  12          int temp = 28;
  13          int mins = 1;
  14          int secs = 5;
  15          int times = 0;
  16          bit secs_will_set = 0;
  17          bit mins_will_set = 0;
  18          bit temp_will_set = 0;
  19          bit start_timer = 0;
  20          enum SPEED{ low = 0, mid = 1, high = 2} speed = low;
  21          enum STATE{ stop = 0, run =1} state = stop;
  22          unsigned char number [] = {0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0xE0,0xFE,0xF6,0x00};
  23          void setInit();
  24          void setTimer();
  25          void setSerial();
  26          void runStart();
  27          void runOnce(enum SPEED speed);
  28          void updateDisplay();
  29          void main(){
  30   1        int start_flag = 0;
  31   1        int update_flag = 0;
  32   1        updateDisplay();
  33   1        setInit();
  34   1        setSerial();
  35   1        setTimer();
  36   1        times = secs*20 + mins*1200;
  37   1        while(1){
  38   2          update_flag = (update_flag+1)%3000;
  39   2          if (update_flag%3000 == 0){
  40   3            updateDisplay();
  41   3          }
  42   2          if (start_timer == 1)
  43   2          {
  44   3              TR0 = 1; //定时器开启
  45   3              start_timer = 0;
  46   3          }
  47   2          if (state == run){
  48   3            if (timer_button == 0){
  49   4              int i = 1000;
  50   4              while(i--);
  51   4              if (timer_button == 0)
  52   4              {
  53   5                times = secs*20 + mins*1200;
  54   5                start_timer = 1;
C51 COMPILER V9.57.0.0   TEST1                                                             09/29/2020 12:48:49 PAGE 2   

  55   5                SBUF = 0x37;
  56   5                while(!TI);
  57   5                TI = 0;
  58   5              }
  59   4            }
  60   3            if (start_flag == 0){
  61   4              runStart();
  62   4              start_flag++;
  63   4            }
  64   3            else{
  65   4              runOnce(speed);
  66   4            }
  67   3          }
  68   2          else{
  69   3            start_flag = 0;
  70   3            motor_in1 = 0;
  71   3            motor_in2 = 0;
  72   3          }
  73   2        }
  74   1      }
  75          void controlSpeed() interrupt 0{
  76   1        int i = 1000;
  77   1        unsigned char transferedData;
  78   1        while(i--);
  79   1        if(speed_button != 0){return;}
  80   1        if (state == run){
  81   2          speed = (speed+1)%3;
  82   2          updateDisplay();
  83   2          switch(speed){
  84   3            case low: transferedData = 0x32;break;
  85   3            case mid: transferedData = 0x33;break;
  86   3            case high: transferedData = 0x34;break;
  87   3          }
  88   2          SBUF = transferedData;
  89   2          while(!TI);
  90   2          TI = 0;
  91   2        }
  92   1      }
  93          void controlState() interrupt 2{
  94   1        int i = 1000;
  95   1        unsigned char transferedData;
  96   1        while(i--);
  97   1        if(state_button != 0){return;}
  98   1        state = 1 - state;
  99   1        updateDisplay();
 100   1        switch(state){
 101   2          case run: transferedData = 0x31;break;
 102   2          case stop: transferedData = 0x30;break;
 103   2        }
 104   1        SBUF = transferedData;
 105   1        while(!TI);
 106   1        TI = 0;
 107   1      }
 108          void timer0() interrupt 1{
 109   1        times--;
 110   1        if(times % 20 == 0){
 111   2          mins = times / 1200;
 112   2          secs = (times - mins*1200)/20;
 113   2          if (temp - temp_set > 2){
 114   3            speed = high;
 115   3          }
 116   2          else{ 
C51 COMPILER V9.57.0.0   TEST1                                                             09/29/2020 12:48:49 PAGE 3   

 117   3            if(temp - temp_set > 1){
 118   4              speed = mid;
 119   4            }
 120   3            else{
 121   4              speed = low;
 122   4            }
 123   3          }
 124   2          updateDisplay();
 125   2          
 126   2        }
 127   1        if(times == 0){
 128   2          state = stop;
 129   2          updateDisplay();
 130   2          start_timer = 0;
 131   2          TR0 = 0;
 132   2          SBUF = 0x30;
 133   2          while(!TI);
 134   2          TI = 0;
 135   2          return;
 136   2        }
 137   1        TH0 = 0x4B; //定时器初值
 138   1        TL0 = 0x28; 
 139   1        TR0 = 1;
 140   1      }
 141          void setInit(){
 142   1        IT0 = 1;  //外部中断0下降沿触发
 143   1        IT1 = 1;
 144   1        EX0 = 1;  //外部中断0允许
 145   1        EX1 = 1; 
 146   1        EA = 1;   //总中断允许
 147   1      }
 148          void setTimer(){
 149   1        TMOD = 0x01|(TMOD&0xF0);
 150   1        TH0 = 0x4B; //定时器初值
 151   1        TL0 = 0x28; 
 152   1        ET0 = 1; //定时器0中断允许
 153   1        TR0 = 0; //定时器关闭
 154   1      }
 155          void runOnce(enum SPEED speed){
 156   1        int num1 = 0;
 157   1        int num2 = 1000;
 158   1        switch(speed){
 159   2          case low:
 160   2              num1 = 300;break;
 161   2          case mid:
 162   2              num1 = 600;break;
 163   2          case high:
 164   2              num1 = 900;break;
 165   2        }
 166   1        num2 = 1000 - num1;
 167   1        motor_in1 = 0;
 168   1        motor_in2 = 1;
 169   1        while(num1--);
 170   1        motor_in1 = 0;
 171   1        motor_in2 = 0;
 172   1        while(num2--);
 173   1      }
 174          void runStart(){
 175   1        int num = 1000;
 176   1        motor_in1 = 0;
 177   1        motor_in2 = 1;
 178   1        while(num--);
C51 COMPILER V9.57.0.0   TEST1                                                             09/29/2020 12:48:49 PAGE 4   

 179   1      }
 180          void setSerial(){
 181   1        SCON = 0x50;
 182   1        TMOD = 0x20|(TMOD&0x0F);
 183   1        PCON = 0x80;
 184   1        TH1 = 0xFA;
 185   1        TL1 = 0xFA;
 186   1        ES = 1;
 187   1        EA = 1;
 188   1        TR1 = 1;
 189   1      }
 190          void serialInit() interrupt 4{
 191   1        unsigned char receivedData;
 192   1        receivedData = SBUF;
 193   1        RI = 0;
 194   1        if(mins_will_set == 1){
 195   2          mins = receivedData - 48;
 196   2          mins_will_set = 0;
 197   2        }
 198   1        else{
 199   2          if(secs_will_set == 1){
 200   3            secs = receivedData - 48;
 201   3            secs_will_set = 0;
 202   3          }
 203   2          else{
 204   3            if(temp_will_set == 1){
 205   4              temp_set = receivedData - 48;
 206   4              temp_will_set = 0;
 207   4            }
 208   3            else{
 209   4              switch (receivedData){
 210   5                case 0x30: state = stop; break;
 211   5                case 0x31: state = run; break;
 212   5                case 0x32: speed = low; break;
 213   5                case 0x33: speed = mid; break;
 214   5                case 0x34: speed = high; break;
 215   5                case 0x35: mins_will_set = 1;break;
 216   5                case 0x36: secs_will_set = 1;break;
 217   5                case 0x37: times = secs*20 + mins*1200;start_timer = 1;break;
 218   5                case 0x38: temp_will_set = 1;break;
 219   5              }
 220   4            }
 221   3          }
 222   2        }
 223   1        SBUF = receivedData;
 224   1        while(!TI);
 225   1        TI = 0;
 226   1        updateDisplay();
 227   1      }
 228          void updateDisplay(){
 229   1        int i,j = 0;
 230   1        int num = 10;
 231   1        unsigned char display_number = number[0];
 232   1        display_clk = 0;
 233   1        display_data = 0;
 234   1        
 235   1        for(i = 0; i < 6; i++){
 236   2          switch(i){
 237   3            case 0: display_number = number[state];break;
 238   3            case 1: display_number = number[speed];break;
 239   3            case 2: display_number = number[secs%10];break;
 240   3            case 3: display_number = number[secs/10];break;
C51 COMPILER V9.57.0.0   TEST1                                                             09/29/2020 12:48:49 PAGE 5   

 241   3            case 4: display_number = number[mins%10];break;
 242   3            case 5: display_number = number[mins/10];break;
 243   3            default: display_number = number[10];
 244   3          }
 245   2          for(j = 0; j < 8; j++)
 246   2          {
 247   3            display_clk = 0;
 248   3            display_data = display_number&1<<j;
 249   3            num = 10;
 250   3            while(num--);
 251   3            display_clk = 1;
 252   3          }
 253   2        }
 254   1      }
 255            
 256          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1246    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      4    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
