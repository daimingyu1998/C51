C51 COMPILER V9.57.0.0   TEST1                                                             09/28/2020 23:04:03 PAGE 1   


C51 COMPILER V9.57.0.0, COMPILATION OF MODULE TEST1
OBJECT MODULE PLACED IN .\Objects\test1.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE test1.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\tes
                    -t1.lst) TABS(2) OBJECT(.\Objects\test1.obj)

line level    source

   1          #include  <reg52.h>
   2          #include  <intrins.h>
   3          
   4          sbit motor_in1 = P2^0;
   5          sbit motor_in2 = P2^1;
   6          sbit display_data = P2^2;
   7          sbit display_clk = P2^3;
   8          sbit state_button = P3^3;
   9          sbit speed_button = P3^2;
  10          sbit timer_button = P3^7;
  11          int mins = 1;
  12          int secs = 5;
  13          int times = 0;
  14          int secs_will_set = 0;
  15          int mins_will_set = 0;
  16          bit start_timer = 0;
  17          enum SPEED{ low = 0, mid = 1, high = 2} speed = low;
  18          enum STATE{ stop = 0, run =1} state = stop;
  19          unsigned char number [] = {0xFC,0x60,0xDA,0xF2,0x66,0xB6,0xBE,0xE0,0xFE,0xF6,0x00};
  20          void setInit();
  21          void setTimer();
  22          void setSerial();
  23          void runStart();
  24          void runOnce(enum SPEED speed);
  25          void updateDisplay();
  26          void main(){
  27   1        int start_flag = 0;
  28   1        int update_flag = 0;
  29   1        updateDisplay();
  30   1        setInit();
  31   1        setSerial();
  32   1        setTimer();
  33   1        times = secs*20 + mins*1200;
  34   1        while(1){
  35   2          update_flag = (update_flag+1)%3000;
  36   2          if (update_flag%3000 == 0){
  37   3            updateDisplay();
  38   3          }
  39   2          if (start_timer == 1)
  40   2          {
  41   3              TR0 = 1; //定时器开启
  42   3              start_timer = 0;
  43   3          }
  44   2          if (state == run){
  45   3            if (timer_button == 0){
  46   4              int i = 1000;
  47   4              while(i--);
  48   4              if (timer_button == 0)
  49   4              {
  50   5                times = secs*20 + mins*1200;
  51   5                start_timer = 1;
  52   5                SBUF = 0x37;
  53   5                while(!TI);
  54   5                TI = 0;
C51 COMPILER V9.57.0.0   TEST1                                                             09/28/2020 23:04:03 PAGE 2   

  55   5              }
  56   4            }
  57   3            if (start_flag == 0){
  58   4              runStart();
  59   4              start_flag++;
  60   4            }
  61   3            else{
  62   4              runOnce(speed);
  63   4            }
  64   3          }
  65   2          else{
  66   3            start_flag = 0;
  67   3            motor_in1 = 0;
  68   3            motor_in2 = 0;
  69   3          }
  70   2        }
  71   1      }
  72          void controlSpeed() interrupt 0{
  73   1        int i = 1000;
  74   1        unsigned char transferedData;
  75   1        while(i--);
  76   1        if(speed_button != 0){return;}
  77   1        if (state == run){
  78   2          speed = (speed+1)%3;
  79   2          updateDisplay();
  80   2          switch(speed){
  81   3            case low: transferedData = 0x02;break;
  82   3            case mid: transferedData = 0x03;break;
  83   3            case high: transferedData = 0x04;break;
  84   3          }
  85   2          SBUF = transferedData;
  86   2          while(!TI);
  87   2          TI = 0;
  88   2        }
  89   1      }
  90          void controlState() interrupt 2{
  91   1        int i = 1000;
  92   1        unsigned char transferedData;
  93   1        while(i--);
  94   1        if(state_button != 0){return;}
  95   1        state = 1 - state;
  96   1        updateDisplay();
  97   1        switch(state){
  98   2          case run: transferedData = 0x01;break;
  99   2          case stop: transferedData = 0x00;break;
 100   2        }
 101   1        SBUF = transferedData;
 102   1        while(!TI);
 103   1        TI = 0;
 104   1      }
 105          void timer0() interrupt 1{
 106   1        times--;
 107   1        if(times % 20 == 0){
 108   2          mins = times / 1200;
 109   2          secs = (times - mins*1200)/20;
 110   2          updateDisplay();
 111   2        }
 112   1        if(times == 0){
 113   2          state = stop;
 114   2          updateDisplay();
 115   2          start_timer = 0;
 116   2          TR0 = 0;
C51 COMPILER V9.57.0.0   TEST1                                                             09/28/2020 23:04:03 PAGE 3   

 117   2          return;
 118   2        }
 119   1        TH0 = 0x4B; //定时器初值
 120   1        TL0 = 0x28; 
 121   1        TR0 = 1;
 122   1      }
 123          void setInit(){
 124   1        IT0 = 1;  //外部中断0下降沿触发
 125   1        IT1 = 1;
 126   1        EX0 = 1;  //外部中断0允许
 127   1        EX1 = 1; 
 128   1        EA = 1;   //总中断允许
 129   1      }
 130          void setTimer(){
 131   1        TMOD = 0x01|(TMOD&0xF0);
 132   1        TH0 = 0x4B; //定时器初值
 133   1        TL0 = 0x28; 
 134   1        ET0 = 1; //定时器0中断允许
 135   1        TR0 = 0; //定时器关闭
 136   1      }
 137          void runOnce(enum SPEED speed){
 138   1        int num1 = 0;
 139   1        int num2 = 1000;
 140   1        switch(speed){
 141   2          case low:
 142   2              num1 = 300;break;
 143   2          case mid:
 144   2              num1 = 600;break;
 145   2          case high:
 146   2              num1 = 900;break;
 147   2        }
 148   1        num2 = 1000 - num1;
 149   1        motor_in1 = 0;
 150   1        motor_in2 = 1;
 151   1        while(num1--);
 152   1        motor_in1 = 0;
 153   1        motor_in2 = 0;
 154   1        while(num2--);
 155   1      }
 156          void runStart(){
 157   1        int num = 1000;
 158   1        motor_in1 = 0;
 159   1        motor_in2 = 1;
 160   1        while(num--);
 161   1      }
 162          void setSerial(){
 163   1        SCON = 0x50;
 164   1        TMOD = 0x20|(TMOD&0x0F);
 165   1        PCON = 0x80;
 166   1        TH1 = 0xFA;
 167   1        TL1 = 0xFA;
 168   1        ES = 1;
 169   1        EA = 1;
 170   1        TR1 = 1;
 171   1      }
 172          void serialInit() interrupt 4{
 173   1        unsigned char receivedData;
 174   1        receivedData = SBUF;
 175   1        RI = 0;
 176   1        if(mins_will_set == 1){
 177   2          mins = receivedData - 48;
 178   2          mins_will_set = 0;
C51 COMPILER V9.57.0.0   TEST1                                                             09/28/2020 23:04:03 PAGE 4   

 179   2        }
 180   1        else{
 181   2          if(secs_will_set == 1){
 182   3            secs = receivedData - 48;
 183   3            secs_will_set = 0;
 184   3          }
 185   2          else{
 186   3            switch (receivedData){
 187   4              case 0x30: state = stop; break;
 188   4              case 0x31: state = run; break;
 189   4              case 0x32: speed = low; break;
 190   4              case 0x33: speed = mid; break;
 191   4              case 0x34: speed = high; break;
 192   4              case 0x35: mins_will_set = 1;break;
 193   4              case 0x36: secs_will_set = 1;break;
 194   4              case 0x37: times = secs*20 + mins*1200;start_timer = 1;break;
 195   4            }
 196   3          }
 197   2        }
 198   1        SBUF = receivedData;
 199   1        while(!TI);
 200   1        TI = 0;
 201   1        updateDisplay();
 202   1      }
 203          void updateDisplay(){
 204   1        int i,j = 0;
 205   1        int num = 10;
 206   1        unsigned char display_number = number[0];
 207   1        display_clk = 0;
 208   1        display_data = 0;
 209   1        
 210   1        for(i = 0; i < 6; i++){
 211   2          switch(i){
 212   3            case 0: display_number = number[state];break;
 213   3            case 1: display_number = number[speed];break;
 214   3            case 2: display_number = number[secs%10];break;
 215   3            case 3: display_number = number[secs/10];break;
 216   3            case 4: display_number = number[mins%10];break;
 217   3            case 5: display_number = number[mins/10];break;
 218   3            default: display_number = number[10];
 219   3          }
 220   2          for(j = 0; j < 8; j++)
 221   2          {
 222   3            display_clk = 0;
 223   3            display_data = display_number&1<<j;
 224   3            num = 10;
 225   3            while(num--);
 226   3            display_clk = 1;
 227   3          }
 228   2        }
 229   1      }
 230            
 231          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1193    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     23      12
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.57.0.0   TEST1                                                             09/28/2020 23:04:03 PAGE 5   

   BIT SIZE         =      1    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
